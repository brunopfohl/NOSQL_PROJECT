version: '3.8'

networks:
  mongo-cluster:
    driver: bridge

volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:
  cfg1-data:
  cfg2-data:
  cfg3-data:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:

services:
  mongo1:
    container_name: mongo_rs0
    image: mongo:7.0-jammy
    hostname: mongo1
    command: ["--replSet", "rs0", "--bind_ip", "127.0.0.1,mongo1", "--port", "27017", "--keyFile", "/etc/mongodb/pki/keyfile"]
    volumes:
      - mongo1-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
      - ./scripts/mongo/init.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - 27017:27017
    networks:
      - mongo-cluster
    healthcheck:
      test: echo "try {rs.status()} catch(err) {rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27017',priority:1},{_id:1,host:'mongo2:27018',priority:0.5},{_id:2,host:'mongo3:27019',priority:0.5}]})}" | mongosh --port 27017 -u '${MONGO_ADMIN_USER:-admin}' -p '${MONGO_ADMIN_PASSWD:-veryStringPassword}' --authenticationDatabase admin --quiet
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_ADMIN_USER:-admin}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_ADMIN_PASSWD:-veryStringPassword}'
      MONGO_INITDB_DATABASE: '${DB_NAME:-test}'
      DB_USERNAME: ${DB_USERNAME:-myuser}
      DB_PASSWORD: ${DB_PASSWORD:-mypassword}

  mongo2:
    container_name: mongo_rs1
    image: mongo:7.0-jammy
    hostname: mongo2
    command: ["--replSet", "rs0", "--bind_ip", "127.0.0.1,mongo2", "--port", "27018", "--keyFile", "/etc/mongodb/pki/keyfile"]
    volumes:
      - mongo2-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    ports:
      - 27018:27017
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_ADMIN_USER:-admin}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_ADMIN_PASSWD:-veryStringPassword}'

  mongo3:
    container_name: mongo_rs2
    image: mongo:7.0-jammy
    hostname: mongo3
    command: ["--replSet", "rs0", "--bind_ip", "127.0.0.1,mongo3", "--port", "27019", "--keyFile", "/etc/mongodb/pki/keyfile"]
    volumes:
      - mongo3-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    ports:
      - 27019:27017
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGO_ADMIN_USER:-admin}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGO_ADMIN_PASSWD:-veryStringPassword}'

  cfgsvr1:
    image: mongo:7.0-jammy
    command: mongod --configsvr --replSet cfgrs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - cfg1-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
      - ./scripts/mongo/init-configserver.js:/docker-entrypoint-initdb.d/init-configserver.js
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  cfgsvr2:
    image: mongo:7.0-jammy
    command: mongod --configsvr --replSet cfgrs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - cfg2-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  cfgsvr3:
    image: mongo:7.0-jammy
    command: mongod --configsvr --replSet cfgrs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - cfg3-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard1-1:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard1rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard1-1-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
      - ./scripts/mongo/init-shard1.js:/docker-entrypoint-initdb.d/init-shard1.js
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard1-2:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard1rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard1-2-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard1-3:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard1rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard1-3-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard2-1:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard2rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard2-1-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard2-2:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard2rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard2-2-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  shard2-3:
    image: mongo:7.0-jammy
    command: mongod --shardsvr --replSet shard2rs --port 27017 --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - shard2-3-data:/data/db
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
    networks:
      - mongo-cluster
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWD:-veryStringPassword}

  mongos:
    image: mongo:7.0-jammy
    command: mongos --configdb cfgrs/cfgsvr1:27017,cfgsvr2:27017,cfgsvr3:27017 --bind_ip_all --keyFile /etc/mongodb/pki/keyfile
    volumes:
      - ./scripts/mongo/rs_keyfile:/etc/mongodb/pki/keyfile
      - ./scripts/mongo/init-router.js:/docker-entrypoint-initdb.d/init-router.js
      - ./scripts/mongo/init-collections.js:/docker-entrypoint-initdb.d/init-collections.js
    ports:
      - "27017:27017"
    networks:
      - mongo-cluster
    depends_on:
      - cfgsvr1
      - cfgsvr2
      - cfgsvr3
      - shard1-1
      - shard2-1