version: '3.8'

networks:
  mongodb-network:
    driver: bridge

volumes:
  shard1-1-data:
  shard1-2-data:
  shard1-3-data:
  shard2-1-data:
  shard2-2-data:
  shard2-3-data:

x-mongodb-config: &mongodb-config
  build:
    context: .
  networks:
    - mongodb-network
  environment: &mongodb-env
    MONGO_INITDB_DATABASE: admin
    DB_USERNAME: '${MONGO_ADMIN_USER:-admin}'
    DB_PASSWORD: '${MONGO_ADMIN_PASSWD:-veryStringPassword}'

x-shard-node: &shard-node-base
  <<: *mongodb-config

services:
  # Shard 1
  shard1-1:
    <<: *shard-node-base
    hostname: shard1-1
    container_name: shard-01-node-a
    depends_on:
      shard1-2:
        condition: service_healthy
      shard1-3:
        condition: service_healthy
    healthcheck:
      test: |
        bash -c 'if mongosh --eval "db.adminCommand(\"ping\")" > /dev/null; then
          if mongosh --eval "rs.status().ok" | grep -q "1"; then
            exit 0;
          else
            mongosh < /data/scripts/init-shard1.js || exit 1;
          fi
        else
          exit 1;
        fi'
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard1rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27122:27017"
    volumes:
      - shard1-1-data:/data/db
      - ./scripts:/data/scripts
    links:
      - shard1-2
      - shard1-3
    restart: always

  shard1-2:
    <<: *shard-node-base
    hostname: shard1-2
    container_name: shard-01-node-b
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard1rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27123:27017"
    volumes:
      - shard1-2-data:/data/db
    restart: always

  shard1-3:
    <<: *shard-node-base
    hostname: shard1-3
    container_name: shard-01-node-c
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard1rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27124:27017"
    volumes:
      - shard1-3-data:/data/db
    restart: always

  # Shard 2
  shard2-1:
    <<: *shard-node-base
    hostname: shard2-1
    container_name: shard-02-node-a
    depends_on:
      shard2-2:
        condition: service_healthy
      shard2-3:
        condition: service_healthy
    healthcheck:
      test: |
        bash -c 'if mongosh --eval "db.adminCommand(\"ping\")" > /dev/null; then
          if mongosh --eval "rs.status().ok" | grep -q "1"; then
            exit 0;
          else
            mongosh < /data/scripts/init-shard2.js || exit 1;
          fi
        else
          exit 1;
        fi'
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard2rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27125:27017"
    volumes:
      - shard2-1-data:/data/db
      - ./scripts:/data/scripts
    links:
      - shard2-2
      - shard2-3
    restart: always

  shard2-2:
    <<: *shard-node-base
    hostname: shard2-2
    container_name: shard-02-node-b
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard2rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27126:27017"
    volumes:
      - shard2-2-data:/data/db
    restart: always

  shard2-3:
    <<: *shard-node-base
    hostname: shard2-3
    container_name: shard-02-node-c
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s
    command: >-
      mongod --replSet shard2rs 
      --shardsvr 
      --port 27017 
      --bind_ip_all
      --keyFile /data/mongodb-keyfile
    ports:
      - "27127:27017"
    volumes:
      - shard2-3-data:/data/db
    restart: always